module Tests

open System
open System.Net
open Swensen.Unquote
open Xunit
open BitThicket.Bitcoin.PeerNetwork
open BitThicket.Bitcoin.PeerNetwork.Protocol

[<Fact>]
let ``Message encoding - basic version paylad test`` () =
    // using example from: https://en.bitcoin.it/wiki/Protocol_documentation#version
    let msg =
        {
            version = 60002u
            services = 1UL
            timestamp = 1355839953000UL
            receiverServices = 1UL
            receiverAddress = IPAddress.Parse("10.0.0.1")
            receiverPort = 8333us
            senderServices = 1UL
            senderAddress = IPAddress.Parse("10.0.0.1")
            senderPort = 8333us
            nonce = 0x3b2eb35d8ce61765UL
            serverAgent = "/Satoshi:0.7.2/"
            blockHeight = 212672
        }
        |> Version

    let expected = [|
        0x62uy; 0xeauy; 0x00uy; 0x00uy
        0x01uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy
        0x11uy; 0xb2uy; 0xd0uy; 0x50uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy
        0x01uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0xffuy; 0xffuy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy
        0x01uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0xffuy; 0xffuy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy; 0x00uy
        0x3buy; 0x2euy; 0xb3uy; 0x5duy; 0x8cuy; 0xe6uy; 0x17uy; 0x65uy;
        0x0fuy; 0x2fuy; 0x53uy; 0x61uy; 0x74uy; 0x6fuy; 0x73uy; 0x68uy; 0x69uy; 0x3auy; 0x30uy; 0x2euy; 0x37uy; 0x2euy; 0x32uy; 0x2fuy
        0xc0uy; 0x3euy; 0x03uy; 0x00uy
    |]

    let actual = Encoding.encodeMessagePayload msg

    test <@ actual = expected @>

